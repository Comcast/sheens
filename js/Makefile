all: demo

CFLAGS=-Wall -std=c99 -fno-asynchronous-unwind-tables -ffunction-sections -Wl,--gc-sections -g -fPIC

DUKVERSION=duktape-2.2.0
DUK ?= ${DUKVERSION}

duk:	${DUK}

${DUK}:
	wget http://duktape.org/${DUKVERSION}.tar.xz
	tar xf ${DUKVERSION}.tar.xz

libduktape.a: ${DUK} ${DUK}/src/duktape.c ${DUK}/extras/print-alert/duk_print_alert.c Makefile
	gcc $(CFLAGS) -c -I${DUK}/src ${DUK}/src/duktape.c 
	gcc $(CFLAGS) -c -I${DUK}/src -I${DUK}/extras/print-alert ${DUK}/extras/print-alert/duk_print_alert.c
	ar rcs libduktape.a duk_print_alert.o duktape.o

libduktape.so: CFLAGS += -fPIC
libduktape.so: libduktape.a
	$(CC) -shared -o $@ -Wl,--whole-archive $^ -Wl,--no-whole-archive -lm

sheens.js: match.js sandbox.js step.js prof.js Makefile
	cat match.js sandbox.js step.js prof.js > sheens.js

sheens_js.c: sheens.js Makefile
	minify sheens.js > sheens.js.terminated
	truncate -s +1 sheens.js.terminated
	./embedstr.sh sheens_js sheens.js.terminated sheens_js.c
	rm sheens.js.terminated

double.js: ../specs/doublecount.yaml Makefile
	echo "// Generated by 'make double.js'.\n\nvar spec = " > double.js
	cat ../specs/doublecount.yaml | yaml2json | jq . >> double.js
	echo ";\ntrue;" >> double.js

demo:	libduktape.a demo.c sheens_js.c double.js Makefile
	gcc $(CFLAGS) -o demo -I${DUK}/src demo.c sheens_js.c -L. -lduktape -lm

.PHONY: test

test:	demo
	./demo double.js demo.js

.PHONY:	clean
clean:
	-rm -f demo double.js sheens.js sheens_js.c libduktape.a libduktape.so

.PHONY: distclean
distclean: clean
	-rm -rf duktape-2.2.0 duktape-2.2.0.tar.xz
